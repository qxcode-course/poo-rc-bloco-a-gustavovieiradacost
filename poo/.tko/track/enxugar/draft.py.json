{
    "patches": [
        {
            "label": "2025-09-23_14-29-06",
            "content": "@@ -1189,11 +1189,4 @@\n do%22)\n-%0Amain()\n",
            "lines": "42"
        },
        {
            "label": "2025-09-30_13-29-35",
            "content": "@@ -18,14 +18,16 @@\n def \n+_\n _init_\n+_\n (sel\n@@ -52,16 +52,29 @@\n e: str):\n+ # construtor\n %0A       \n@@ -97,16 +97,28 @@\n  = color\n+ # atributos\n %0A       \n@@ -166,24 +166,28 @@\n ss: int = 0%0A\n+    \n %0A    def dry\n@@ -271,17 +271,16 @@\n etness %3E\n-=\n  self.is\n@@ -363,134 +363,27 @@\n nt(%22\n-t\n+T\n oalha \n-encharc\n+molh\n ada\n+!\n %22)%0A%0A\n-    def isDry(self):%0A        return self.wetness == 0%0A%0A    def wringOut(self):%0A        self.wetness = 0%0A%0A\n     \n@@ -441,16 +441,31 @@\n  == %22P%22:\n+ # early return\n %0A       \n@@ -597,16 +597,33 @@\n return 0\n+ # default return\n %0A%0A    de\n@@ -628,13 +628,15 @@\n def \n+_\n _str_\n+_\n (sel\n@@ -645,16 +645,27 @@\n  -%3E str:\n+ # toString\n %0A       \n@@ -676,19 +676,20 @@\n urn f%22Co\n+lo\n r:\n- \n %7Bself.co\n@@ -698,17 +698,13 @@\n r%7D, \n-Tamanho: \n+Size:\n %7Bsel\n@@ -716,17 +716,12 @@\n e%7D, \n-Umidade: \n+Wet:\n %7Bsel\n@@ -732,17 +732,20 @@\n tness%7D%22%0A\n-%0A\n+    \n %0Adef mai\n@@ -748,16 +748,21 @@\n  main():\n+  %0A  \n %0A    tow\n@@ -803,16 +803,24 @@\n e True:%0A\n+        \n %0A       \n@@ -844,34 +844,8 @@\n t()%0A\n-        print(%22$%22 + line)%0A\n     \n@@ -959,13 +959,11 @@\n == %22\n-criar\n+new\n %22:%0A \n@@ -1095,266 +1095,11 @@\n = %22s\n-eca%22:%0A            print(%22sim%22 if towel.isDry() else %22nao%22)%0A        elif args%5B0%5D == %22torcer%22:%0A            towel.wringOut()%0A        elif args%5B0%5D == %22enxugar%22:%0A            amount: int = int(args%5B1%5D)%0A            towel.dry(amount)%0A        elif args%5B0%5D == %22mostrar\n+how\n %22:%0A \n@@ -1186,16 +1186,14 @@\n trado%22)%0A\n-%0A%0A\n main()\n",
            "lines": "43"
        },
        {
            "label": "2025-09-30_14-02-07",
            "content": "@@ -813,17 +813,16 @@\n Towel(%22%22\n- \n , %22%22)%0A  \n@@ -1494,14 +1494,15 @@\n rado%22)%0A%0A\n+%0A\n main()\n",
            "lines": "59"
        },
        {
            "label": "2025-09-30_14-08-57",
            "content": "class Towel:\n    def _init_(self, color: str, size: str):\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha encharcada\")\n\n    def isDry(self):\n        return self.wetness == 0\n\n    def wringOut(self):\n        self.wetness = 0\n\n    def isMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def _str_(self) -> str:\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\n\ndef main():\n    towel: Towel = Towel(\"\" , \"\")\n    while True:\n\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"criar\":\n            color: str = args[1]\n            size: str = args[2]\n            towel = Towel(color, size)\n        elif args[0] == \"seca\":\n            print(\"sim\" if towel.isDry() else \"nao\")\n        elif args[0] == \"torcer\":\n            towel.wringOut()\n        elif args[0] == \"enxugar\":\n            amount: int = int(args[1])\n            towel.dry(amount)\n        elif args[0] == \"mostrar\":\n            print(towel)\n        else:\n            print(\"fail: comando n\u00e3o encontrado\")\n\nmain()",
            "lines": "58"
        }
    ]
}