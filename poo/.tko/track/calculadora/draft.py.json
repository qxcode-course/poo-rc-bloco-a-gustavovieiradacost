{
    "patches": [
        {
            "label": "2025-10-06_01-05-56",
            "content": "class Calculadora:\n    def __init__(self, batteryMax):\n        self.display = 0.0\n        self.battery = 0\n        self.batteryMax = batteryMax  \n        \n    def __str__(self):\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\n\n    def charge(self, increment):\n        self.battery += increment\n        if self.battery > self.batteryMax:\n            self.battery = self.batteryMax\n            \n    def sum(self, a, b):\n        if self.battery <= 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        self.display = a + b\n        self.battery -= 1\n\n    def div(self, numerator, denominator):\n        if self.battery <= 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        if denominator == 0:\n            print(\"fail: divisao por zero\")\n            self.battery -= 1\n            return\n        self.display = numerator / denominator\n        self.battery -= 1\n\n\ndef main():\n    calc = None\n\n    while True:\n        comando = input().strip().split()\n        if len(comando) == 0:\n            continue\n\n        # Imprime o comando digitado com $\n        print(\"$\" + \" \".join(comando))\n\n        acao = comando[0]\n\n        if acao == \"end\":\n            break\n        elif acao == \"init\":\n            calc = Calculadora(int(comando[1]))\n        elif acao == \"show\":\n            print(calc)\n        elif acao == \"charge\":\n            calc.charge(int(comando[1]))\n        elif acao == \"sum\":\n            a = float(comando[1])\n            b = float(comando[2])\n            calc.sum(a, b)\n        elif acao == \"div\":\n            num = float(comando[1])\n            den = float(comando[2])\n            calc.div(num, den)\n        else:\n            print(\"fail: comando invalido\")\n\n\nif __name__ == \"__main__\":\n    main()        ",
            "lines": "68"
        }
    ]
}