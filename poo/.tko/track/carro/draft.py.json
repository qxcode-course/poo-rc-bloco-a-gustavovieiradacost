{
    "patches": [
        {
            "label": "2025-10-04_03-04-40",
            "content": "@@ -44,22 +44,20 @@\n   self.p\n-esso\n as\n+s_\n  = 0%0A   \n@@ -66,30 +66,23 @@\n    self.\n-limite_pessoas\n+passMax\n  = 2%0A   \n@@ -90,29 +90,24 @@\n     self.gas\n-olina\n  = 0%0A       \n@@ -112,24 +112,20 @@\n    self.\n-tanque_m\n+gasM\n ax = 100\n@@ -199,22 +199,20 @@\n  %7Bself.p\n-esso\n as\n+s_\n %7D, gas: \n@@ -220,21 +220,16 @@\n self.gas\n-olina\n %7D, km: %7B\n@@ -250,18 +250,17 @@\n  def ent\n-ra\n+e\n r(self):\n@@ -281,22 +281,20 @@\n lf.p\n-essoas\n+ass_\n  %3C self.\n limi\n@@ -293,22 +293,15 @@\n elf.\n-limite_pessoas\n+passMax\n :%0A  \n@@ -316,22 +316,20 @@\n   self.p\n-esso\n as\n+s_\n  += 1%0A  \n@@ -403,20 +403,21 @@\n     def \n-sair\n+leave\n (self):%0A\n@@ -433,22 +433,20 @@\n f self.p\n-essoas\n+ass_\n  %3E 0:%0A  \n@@ -461,22 +461,20 @@\n   self.p\n-esso\n as\n+s_\n  -= 1%0A  \n@@ -549,30 +549,22 @@\n def \n-abastecer\n+fuel\n (self, \n-litros\n+qtd\n ):%0A \n@@ -582,23 +582,15 @@\n .gas\n-olina += litros\n+ += qtd\n %0A   \n@@ -609,21 +609,16 @@\n .gas\n-olina\n  %3E self.\n tanq\n@@ -613,24 +613,20 @@\n  %3E self.\n-tanque_m\n+gasM\n ax:%0A    \n@@ -645,21 +645,16 @@\n .gas\n-olina\n  = self.\n tanq\n@@ -653,16 +653,12 @@\n elf.\n-tanque_m\n+gasM\n ax%0A%0A\n@@ -666,22 +666,20 @@\n    def d\n-i\n ri\n-gir\n+ve\n (self, d\n@@ -681,21 +681,16 @@\n lf, dist\n-ancia\n ):%0A     \n@@ -701,22 +701,20 @@\n f self.p\n-esso\n as\n+s_\n  == 0:%0A \n@@ -801,21 +801,16 @@\n self.gas\n-olina\n  == 0:%0A \n@@ -890,21 +890,16 @@\n .gas\n-olina\n  %3E= dist\n anci\n@@ -894,21 +894,16 @@\n  %3E= dist\n-ancia\n :%0A      \n@@ -920,21 +920,16 @@\n .gas\n-olina\n  -= dist\n anci\n@@ -920,29 +920,24 @@\n .gas -= dist\n-ancia\n %0A           \n@@ -952,21 +952,16 @@\n  += dist\n-ancia\n %0A       \n@@ -1026,21 +1026,16 @@\n self.gas\n-olina\n %7D km%22)%0A \n@@ -1064,21 +1064,16 @@\n self.gas\n-olina\n %0A       \n@@ -1089,13 +1089,8 @@\n .gas\n-olina\n  = 0\n@@ -1111,18 +1111,16 @@\n %0A    car\n-ro\n  = Carro\n@@ -1146,23 +1146,36 @@\n         \n-comando\n+try:%0A            cmd\n  = input\n@@ -1193,16 +1193,59 @@\n split()%0A\n+        except EOFError:%0A            break%0A\n         \n@@ -1252,22 +1252,18 @@\n if len(c\n-omando\n+md\n ) == 0:%0A\n@@ -1282,16 +1282,76 @@\n continue\n+%0A%0A        # imprime o comando exatamente no formato esperado\n %0A       \n@@ -1377,25 +1377,22 @@\n in(c\n-omando\n+md\n ))%0A\n+%0A\n         \n acao\n@@ -1391,41 +1391,17 @@\n     \n-acao = comando%5B0%5D%0A        if acao\n+if cmd%5B0%5D\n  == \n@@ -1434,28 +1434,30 @@\n        elif \n-acao\n+cmd%5B0%5D\n  == %22show%22:%0A\n@@ -1477,18 +1477,16 @@\n rint(car\n-ro\n )%0A      \n@@ -1488,28 +1488,30 @@\n        elif \n-acao\n+cmd%5B0%5D\n  == %22enter%22:\n@@ -1530,16 +1530,13 @@\n  car\n-ro\n .ent\n-ra\n+e\n r()%0A\n@@ -1544,28 +1544,30 @@\n        elif \n-acao\n+cmd%5B0%5D\n  == %22leave%22:\n@@ -1586,15 +1586,14 @@\n  car\n-ro.sair\n+.leave\n ()%0A \n@@ -1600,28 +1600,30 @@\n        elif \n-acao\n+cmd%5B0%5D\n  == %22fuel%22:%0A\n@@ -1638,67 +1638,28 @@\n     \n-litros = int(comando%5B1%5D)%0A            carro.abastecer(litros\n+car.fuel(int(cmd%5B1%5D)\n )%0A  \n@@ -1673,12 +1673,14 @@\n lif \n-acao\n+cmd%5B0%5D\n  == \n@@ -1704,71 +1704,29 @@\n     \n-distancia = int(comando%5B1%5D)%0A            carro.dirigir(distancia\n+car.drive(int(cmd%5B1%5D)\n )%0A  \n@@ -1821,8 +1821,9 @@\n  main()%0A\n+%0A\n",
            "lines": "76"
        },
        {
            "label": "2025-10-04_03-07-21",
            "content": "class Carro:\n    def __init__(self):\n        self.pessoas = 0\n        self.limite_pessoas = 2\n        self.gasolina = 0\n        self.tanque_max = 100\n        self.km = 0\n\n    def __str__(self):\n        return f\"pass: {self.pessoas}, gas: {self.gasolina}, km: {self.km}\"\n\n    def entrar(self):\n        if self.pessoas < self.limite_pessoas:\n            self.pessoas += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def sair(self):\n        if self.pessoas > 0:\n            self.pessoas -= 1\n        else:\n            print(\"fail: nao ha ninguem no carro\")\n\n    def abastecer(self, litros):\n        self.gasolina += litros\n        if self.gasolina > self.tanque_max:\n            self.gasolina = self.tanque_max\n\n    def dirigir(self, distancia):\n        if self.pessoas == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n        if self.gasolina == 0:\n            print(\"fail: tanque vazio\")\n            return\n        if self.gasolina >= distancia:\n            self.gasolina -= distancia\n            self.km += distancia\n        else:\n            print(f\"fail: tanque vazio apos andar {self.gasolina} km\")\n            self.km += self.gasolina\n            self.gasolina = 0\n\n\ndef main():\n    carro = Carro()\n    while True:\n        comando = input().strip().split()\n        if len(comando) == 0:\n            continue\n        print(\"$\" + \" \".join(comando))\n        acao = comando[0]\n        if acao == \"end\":\n            break\n        elif acao == \"show\":\n            print(carro)\n        elif acao == \"enter\":\n            carro.entrar()\n        elif acao == \"leave\":\n            carro.sair()\n        elif acao == \"fuel\":\n            litros = int(comando[1])\n            carro.abastecer(litros)\n        elif acao == \"drive\":\n            distancia = int(comando[1])\n            carro.dirigir(distancia)\n        else:\n            print(\"fail: comando invalido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "72"
        }
    ]
}